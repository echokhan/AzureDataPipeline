{
	"name": "BatchLoad",
	"properties": {
		"activities": [
			{
				"name": "BlobtoRawBatchLoad",
				"type": "Copy",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "DelimitedTextSource",
						"storeSettings": {
							"type": "AzureBlobStorageReadSettings",
							"recursive": true,
							"enablePartitionDiscovery": false
						},
						"formatSettings": {
							"type": "DelimitedTextReadSettings"
						}
					},
					"sink": {
						"type": "AzureSqlSink",
						"writeBehavior": "insert",
						"sqlWriterUseTableLock": false,
						"disableMetricsCollection": false
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "Blob_BatchWeatherData",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "SQL_raw_Batch_WeatherData",
						"type": "DatasetReference"
					}
				]
			},
			{
				"name": "uspBatchUpsertTransformedWeatherData",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "BlobtoRawBatchLoad",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[uspBatchUpsertTransformedWeatherData]"
				},
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "uspUpsertDimCity",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "BlobtoRawBatchLoad",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[uspUpsertDimCity]"
				},
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "uspTruncateInsertSemanticWeatherData",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "uspBatchUpsertTransformedWeatherData",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[uspTruncateInsertSemanticWeatherData]"
				},
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "Failure Notification Email",
				"type": "WebActivity",
				"dependsOn": [
					{
						"activity": "uspTruncateInsertSemanticWeatherData",
						"dependencyConditions": [
							"Skipped",
							"Failed"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"method": "POST",
					"url": "https://prod-01.uksouth.logic.azure.com:443/workflows/b86ee8bd275c48b698b1f95e65ac3307/triggers/When_a_HTTP_request_is_received/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2FWhen_a_HTTP_request_is_received%2Frun&sv=1.0&sig=1h-FKobPr1STVZm4y-B0X-lGJI52M-4WCSJlQi6zGNs",
					"body": {
						"value": "{\n    \"dataFactoryName\": \"@{pipeline().DataFactory}\",\n    \"message\": \"Your pipeline with run ID @{pipeline().RunId} has failed.\",\n    \"pipelineName\": \"@{pipeline().Pipeline}\",\n    \"receiver\": \"@{pipeline().parameters.OperationsEmail}\"\n}",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Failure Notification Email Dim City",
				"type": "WebActivity",
				"dependsOn": [
					{
						"activity": "uspUpsertDimCity",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"method": "POST",
					"url": "https://prod-01.uksouth.logic.azure.com:443/workflows/b86ee8bd275c48b698b1f95e65ac3307/triggers/When_a_HTTP_request_is_received/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2FWhen_a_HTTP_request_is_received%2Frun&sv=1.0&sig=1h-FKobPr1STVZm4y-B0X-lGJI52M-4WCSJlQi6zGNs",
					"body": {
						"value": "{\n    \"dataFactoryName\": \"@{pipeline().DataFactory}\",\n    \"message\": \"Your pipeline with run ID @{pipeline().RunId} has failed. Dim City Load failure\",\n    \"pipelineName\": \"@{pipeline().Pipeline}\",\n    \"receiver\": \"@{pipeline().parameters.OperationsEmail}\"\n}",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Archive Bulk Load",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "uspTruncateInsertSemanticWeatherData",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "DelimitedTextSource",
						"storeSettings": {
							"type": "AzureBlobStorageReadSettings",
							"recursive": true,
							"enablePartitionDiscovery": false
						},
						"formatSettings": {
							"type": "DelimitedTextReadSettings"
						}
					},
					"sink": {
						"type": "DelimitedTextSink",
						"storeSettings": {
							"type": "AzureBlobStorageWriteSettings"
						},
						"formatSettings": {
							"type": "DelimitedTextWriteSettings",
							"quoteAllText": true,
							"fileExtension": ".csv"
						}
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "Blob_BatchWeatherData",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "Blob_BatchWeatherData_processed",
						"type": "DatasetReference"
					}
				]
			},
			{
				"name": "Delete Landing Bulk Load",
				"type": "Delete",
				"dependsOn": [
					{
						"activity": "Archive Bulk Load",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "Blob_BatchWeatherData",
						"type": "DatasetReference"
					},
					"logStorageSettings": {
						"linkedServiceName": {
							"referenceName": "AzureBlobStorage1",
							"type": "LinkedServiceReference"
						},
						"path": "weatherproject/archived_file_logs"
					},
					"enableLogging": true,
					"storeSettings": {
						"type": "AzureBlobStorageReadSettings",
						"recursive": true,
						"enablePartitionDiscovery": false
					}
				}
			}
		],
		"parameters": {
			"OperationsEmail": {
				"type": "string",
				"defaultValue": "####@cardiff.ac.uk"
			}
		},
		"annotations": []
	}
}